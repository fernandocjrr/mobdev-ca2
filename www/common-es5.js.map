{"version":3,"sources":["node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","node_modules/@ionic/core/dist/esm/haptic-ccbda579.js","node_modules/@ionic/core/dist/esm/index-729ec402.js","node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","node_modules/@ionic/core/dist/esm/theme-c2dc54d9.js","src/app/services/(dis)like.service.ts","src/app/services/api.service.ts"],"names":[],"mappings":"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","sourcesContent":["const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","/**\n * Check to see if the Haptic Plugin is available\n * @return Returns `true` or false if the plugin is available\n */\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.selection();\n    }\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionStart();\n    }\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionChanged();\n    }\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    const engine = window.TapticEngine;\n    if (engine) {\n        engine.gestureSelectionEnd();\n    }\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelectionEnd as c, hapticSelection as h };\n","/**\n * Does a simple sanitization of all elements\n * in an untrusted string\n */\nconst sanitizeDOMString = (untrustedString) => {\n    try {\n        if (typeof untrustedString !== 'string' || untrustedString === '') {\n            return untrustedString;\n        }\n        /**\n         * Create a document fragment\n         * separate from the main DOM,\n         * create a div to do our work in\n         */\n        const documentFragment = document.createDocumentFragment();\n        const workingDiv = document.createElement('div');\n        documentFragment.appendChild(workingDiv);\n        workingDiv.innerHTML = untrustedString;\n        /**\n         * Remove any elements\n         * that are blocked\n         */\n        blockedTags.forEach(blockedTag => {\n            const getElementsToRemove = documentFragment.querySelectorAll(blockedTag);\n            for (let elementIndex = getElementsToRemove.length - 1; elementIndex >= 0; elementIndex--) {\n                const element = getElementsToRemove[elementIndex];\n                if (element.parentNode) {\n                    element.parentNode.removeChild(element);\n                }\n                else {\n                    documentFragment.removeChild(element);\n                }\n                /**\n                 * We still need to sanitize\n                 * the children of this element\n                 * as they are left behind\n                 */\n                const childElements = getElementChildren(element);\n                /* tslint:disable-next-line */\n                for (let childIndex = 0; childIndex < childElements.length; childIndex++) {\n                    sanitizeElement(childElements[childIndex]);\n                }\n            }\n        });\n        /**\n         * Go through remaining elements and remove\n         * non-allowed attribs\n         */\n        // IE does not support .children on document fragments, only .childNodes\n        const dfChildren = getElementChildren(documentFragment);\n        /* tslint:disable-next-line */\n        for (let childIndex = 0; childIndex < dfChildren.length; childIndex++) {\n            sanitizeElement(dfChildren[childIndex]);\n        }\n        // Append document fragment to div\n        const fragmentDiv = document.createElement('div');\n        fragmentDiv.appendChild(documentFragment);\n        // First child is always the div we did our work in\n        const getInnerDiv = fragmentDiv.querySelector('div');\n        return (getInnerDiv !== null) ? getInnerDiv.innerHTML : fragmentDiv.innerHTML;\n    }\n    catch (err) {\n        console.error(err);\n        return '';\n    }\n};\n/**\n * Clean up current element based on allowed attributes\n * and then recursively dig down into any child elements to\n * clean those up as well\n */\nconst sanitizeElement = (element) => {\n    // IE uses childNodes, so ignore nodes that are not elements\n    if (element.nodeType && element.nodeType !== 1) {\n        return;\n    }\n    for (let i = element.attributes.length - 1; i >= 0; i--) {\n        const attribute = element.attributes.item(i);\n        const attributeName = attribute.name;\n        // remove non-allowed attribs\n        if (!allowedAttributes.includes(attributeName.toLowerCase())) {\n            element.removeAttribute(attributeName);\n            continue;\n        }\n        // clean up any allowed attribs\n        // that attempt to do any JS funny-business\n        const attributeValue = attribute.value;\n        /* tslint:disable-next-line */\n        if (attributeValue != null && attributeValue.toLowerCase().includes('javascript:')) {\n            element.removeAttribute(attributeName);\n        }\n    }\n    /**\n     * Sanitize any nested children\n     */\n    const childElements = getElementChildren(element);\n    /* tslint:disable-next-line */\n    for (let i = 0; i < childElements.length; i++) {\n        sanitizeElement(childElements[i]);\n    }\n};\n/**\n * IE doesn't always support .children\n * so we revert to .childNodes instead\n */\nconst getElementChildren = (el) => {\n    return (el.children != null) ? el.children : el.childNodes;\n};\nconst allowedAttributes = ['class', 'id', 'href', 'src', 'name', 'slot'];\nconst blockedTags = ['script', 'style', 'iframe', 'meta', 'link', 'object', 'embed'];\n\nexport { sanitizeDOMString as s };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\n\nconst LIKED_EPI = 'likedEpisodes';\nconst DISLIKED_EPI = 'dislikedEpisodes';\nconst LIKED_CHAR = 'likedCharacters';\nconst DISLIKED_CHAR = 'dislikedCharacters';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LikeService {\n\n    constructor(private storage: Storage, private storageChar: Storage) { }\n\n    //=============================CHARACTERS===============================\n\n    getAllLikedCharacters() {\n        return this.storageChar.get(LIKED_CHAR);\n    }\n\n    getAllDislikedCharacters() {\n        return this.storageChar.get(DISLIKED_CHAR);\n    }\n\n    isLikedCharacter(characterId) {\n        return this.getAllLikedCharacters().then(result => {\n            return result && result.indexOf(characterId) !== -1;\n        });\n    }\n\n\n    isDislikedCharacter(characterId) {\n        return this.getAllDislikedCharacters().then(result => {\n            return result && result.indexOf(characterId) !== -1;\n        });\n    }\n\n    likeCharacter(characterId) {\n        this.removeDislikedCharacter(characterId);\n        return this.getAllLikedCharacters().then(result => {\n            if (result) {\n                result.push(characterId);\n                return this.storageChar.set(LIKED_CHAR, result);\n            } else {\n                return this.storageChar.set(LIKED_CHAR, [characterId]);\n            }\n        });\n    }\n\n    dislikeCharacter(characterId) {\n        this.removeLikedCharacter(characterId);\n        return this.getAllDislikedCharacters().then(result => {\n            if (result) {\n                result.push(characterId);\n                return this.storageChar.set(DISLIKED_CHAR, result);\n            } else {\n                return this.storageChar.set(DISLIKED_CHAR, [characterId]);\n            }\n        });\n    }\n\n    removeLikedCharacter(characterId) {\n        return this.getAllLikedCharacters().then(result => {\n            if (result && result.indexOf(characterId) !== -1) {\n                var index = result.indexOf(characterId);\n                result.splice(index, 1);\n                return this.storageChar.set(LIKED_CHAR, result);\n            }\n        });\n    }\n\n    removeDislikedCharacter(characterId) {\n        return this.getAllDislikedCharacters().then(result => {\n            if (result && result.indexOf(characterId) !== -1) {\n                var index = result.indexOf(characterId);\n                result.splice(index, 1);\n                return this.storageChar.set(DISLIKED_CHAR, result);\n            }\n        });\n    }\n\n    noStatusCharacter(characterId) {\n        this.removeDislikedCharacter(characterId);\n        this.removeLikedCharacter(characterId);\n    }\n\n    //=============================EPISODES===============================\n\n    getAllLikedEpisodes() {\n        return this.storage.get(LIKED_EPI);\n    }\n\n    getAllDislikedEpisodes() {\n        return this.storage.get(DISLIKED_EPI);\n    }\n\n    isLikedEpisode(episodeId) {\n        return this.getAllLikedEpisodes().then(result => {\n            return result && result.indexOf(episodeId) !== -1;\n        });\n    }\n\n\n    isDislikedEpisode(episodeId) {\n        return this.getAllDislikedEpisodes().then(result => {\n            return result && result.indexOf(episodeId) !== -1;\n        });\n    }\n\n    likeEpisode(episodeId) {\n        this.removeDislikedEpisode(episodeId);\n        return this.getAllLikedEpisodes().then(result => {\n            if (result) {\n                result.push(episodeId);\n                return this.storage.set(LIKED_EPI, result);\n            } else {\n                return this.storage.set(LIKED_EPI, [episodeId]);\n            }\n        });\n    }\n\n    dislikeEpisode(episodeId) {\n        this.removeLikedEpisode(episodeId);\n        return this.getAllDislikedEpisodes().then(result => {\n            if (result) {\n                result.push(episodeId);\n                return this.storage.set(DISLIKED_EPI, result);\n            } else {\n                return this.storage.set(DISLIKED_EPI, [episodeId]);\n            }\n        });\n    }\n\n    removeLikedEpisode(episodeId) {\n        return this.getAllLikedEpisodes().then(result => {\n            if (result && result.indexOf(episodeId) !== -1) {\n                var index = result.indexOf(episodeId);\n                result.splice(index, 1);\n                return this.storage.set(LIKED_EPI, result);\n            }\n        });\n    }\n\n    removeDislikedEpisode(episodeId) {\n        return this.getAllDislikedEpisodes().then(result => {\n            if (result && result.indexOf(episodeId) !== -1) {\n                var index = result.indexOf(episodeId);\n                result.splice(index, 1);\n                return this.storage.set(DISLIKED_EPI, result);\n            }\n        });\n    }\n\n    noStatusEpisode(episodeId) {\n        this.removeDislikedEpisode(episodeId);\n        this.removeLikedEpisode(episodeId);\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { of } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ApiService {\n\n\n    constructor(private http: HttpClient) { }\n\n\n    getEpisodes() {\n        return this.http.get(`https://www.breakingbadapi.com/api/episodes`);\n    }\n\n    getEpisode(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/episodes/${id}`);\n    }\n\n    getCharacters(limit: number, offset: number) {\n        return this.http.get(`https://breakingbadapi.com/api/characters?limit=${limit}&offset=${offset}`)\n    }\n\n    getCharacter(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/characters/${id}`)\n    }\n\n    getQuotes() {\n        return this.http.get('https://breakingbadapi.com/api/quotes')\n    }\n\n    getQuotesByAuthor(author: String) {\n        return this.http.get(`https://breakingbadapi.com/api/quote?author=${author}`)\n    }\n\n    getQuote(id) {\n        return this.http.get(`https://www.breakingbadapi.com/api/quotes/${id}`)\n    }\n\n    getDeathCount(name: String) {\n        return this.http.get(`https://breakingbadapi.com/api/death-count?name=${name}`)\n    }\n\n\n}"],"sourceRoot":"webpack:///","file":"common-es5.js"}